// <auto-generated />
using System;
using IndainCuisine.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IndainCuisine.Migrations
{
    [DbContext(typeof(IndianCusineContext))]
    partial class IndianCusineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IndainCuisine.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "appetizers",
                            Description = "Discover a tantalizing array of bite-sized wonders that ignite your appetite and elevate your dining experience with our diverse collection of appetizers.",
                            ImagePath = "/Assets/Category/appetizers.jpg",
                            Name = "Appetizers"
                        },
                        new
                        {
                            CategoryId = "main",
                            Description = "Savor the heart of every meal with our exquisite selection of main courses, where culinary mastery transforms the finest ingredients into unforgettable dining moments.",
                            ImagePath = "/Assets/Category/maincourses.jpg",
                            Name = "Main Courses"
                        },
                        new
                        {
                            CategoryId = "breads",
                            Description = "Indulge in the comforting world of freshly baked breads, where aroma, flavor, and texture unite to create a symphony of wholesome goodness",
                            ImagePath = "/Assets/Category/breads.jpg",
                            Name = "Breads"
                        },
                        new
                        {
                            CategoryId = "rice",
                            Description = "Explore the global tapestry of flavors woven through our rice dishes, offering a diverse palette of grains transformed into delectable culinary art.",
                            ImagePath = "/Assets/Category/rice.jpg",
                            Name = "Rice"
                        },
                        new
                        {
                            CategoryId = "sidedishes",
                            Description = "Elevate your meal with our thoughtfully curated side dishes, designed to complement and enhance the main flavors while adding a touch of culinary sophistication.",
                            ImagePath = "/Assets/Category/sidedishes.jpg",
                            Name = "Side Dishes"
                        },
                        new
                        {
                            CategoryId = "desserts",
                            Description = "Satisfy your sweet cravings and conclude your meal on a delightful note with our array of irresistible and beautifully crafted side desserts.",
                            ImagePath = "/Assets/Category/appetizers.jpg",
                            Name = "Desserts"
                        },
                        new
                        {
                            CategoryId = "beverages",
                            Description = "Quench your thirst and tantalize your taste buds with our diverse selection of beverages, ranging from refreshing classics to innovative and exotic concoctions.",
                            ImagePath = "/Assets/Category/beverages.jpg",
                            Name = "Beverages"
                        });
                });

            modelBuilder.Entity("IndainCuisine.Models.DomainModels.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExpireDate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserDetails", (string)null);
                });

            modelBuilder.Entity("IndainCuisine.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("FoodId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            CategoryId = "appetizers",
                            Description = "Triangular fried pastry containing spiced vegetables or meat.",
                            ImageUrl = "/Assets/Product/Samosa.jpg",
                            Name = "Samosa",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 2,
                            CategoryId = "appetizers",
                            Description = "Indian fritter which contains deep-fried vegetables coated in batter.",
                            ImageUrl = "/Assets/Product/Pakora.jpg",
                            Name = "Pakora",
                            Price = 10.0
                        },
                        new
                        {
                            FoodId = 3,
                            CategoryId = "appetizers",
                            Description = "Paneer marinated with cashew, chili, garlic, and tomatoes grilled.",
                            ImageUrl = "/Assets/Product/Paneer Tikka.jpg",
                            Name = "Paneer Tikka",
                            Price = 18.0
                        },
                        new
                        {
                            FoodId = 4,
                            CategoryId = "appetizers",
                            Description = "Golden fried potato patty, stuffed with peas, chutneys.",
                            ImageUrl = "/Assets/Product/Aloo Tikki.jpg",
                            Name = "Aloo Tikki",
                            Price = 24.0
                        },
                        new
                        {
                            FoodId = 5,
                            CategoryId = "appetizers",
                            Description = "Indian crisps made from lentil flour.",
                            ImageUrl = "/Assets/Product/Papadum.jpg",
                            Name = "Papadum",
                            Price = 5.0
                        },
                        new
                        {
                            FoodId = 6,
                            CategoryId = "appetizers",
                            Description = "Mashed, spiced vegetable patty in Indian cuisine, dipped in batter, bread crumbs, and fried in oil.",
                            ImageUrl = "/Assets/Product/Vegetable Cutlet.jpg",
                            Name = "Vegetable Cutlet",
                            Price = 6.0
                        },
                        new
                        {
                            FoodId = 7,
                            CategoryId = "appetizers",
                            Description = "Gujarat-based vegetarian dish, which is made with fermented gram flour batter for breakfast, main course, side dish, or snack.",
                            ImageUrl = "/Assets/Product/Dhokla.jpg",
                            Name = "Dhokla",
                            Price = 16.0
                        },
                        new
                        {
                            FoodId = 8,
                            CategoryId = "appetizers",
                            Description = "Fritters where fresh chilies are dipped in gram flour batter and deep fried to perfection, until crispy & aromatic.",
                            ImageUrl = "/Assets/Product/Bhaji.jpg",
                            Name = "Bhaji",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 9,
                            CategoryId = "appetizers",
                            Description = "Kabab made with minced beef. Flavoured with chopped ginger, chili and coriander skewered in clay oven.",
                            ImageUrl = "/Assets/Product/Seekh Kebab.jpg",
                            Name = "Seekh Kebab",
                            Price = 4.0
                        },
                        new
                        {
                            FoodId = 10,
                            CategoryId = "appetizers",
                            Description = "Fried dough with various ingredients that typically create a spicy, tangy, or salty flavour.",
                            ImageUrl = "/Assets/Product/Chaat.jpeg",
                            Name = "Chaat",
                            Price = 7.0
                        },
                        new
                        {
                            FoodId = 11,
                            CategoryId = "main",
                            Description = "Made with Indian spices, vegetables, rice, and meat.",
                            ImageUrl = "/Assets/Product/Biryani.jpeg",
                            Name = "Biryani(chicken, mutton, vegetable)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 12,
                            CategoryId = "main",
                            Description = "Composed with a gravy seasoned with a mixture of ground spices.",
                            ImageUrl = "/Assets/Product/Curry.jpg",
                            Name = "Curry(chicken, lamb, beef, vegetable)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 13,
                            CategoryId = "main",
                            Description = "Curry which is rich, tomato based sauce, mixed with onions, cream, and traditional Indian spices.",
                            ImageUrl = "/Assets/Product/Tikka Masala.jpeg",
                            Name = "Tikka Masala(chicken, paneer)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 14,
                            CategoryId = "main",
                            Description = "Green dish, served as a side dish, natural taste of spinach and mustard greens enhanced with ginger, hot peppers and lemon juice.",
                            ImageUrl = "/Assets/Product/Saag.jpg",
                            Name = "Saag(paneer, chicken, lamb)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 15,
                            CategoryId = "main",
                            Description = "Curry with thick, flavorful red sauce and tender meat.",
                            ImageUrl = "/Assets/Product/Rogan Josh.jpg",
                            Name = "Rogan Josh(lamb)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 16,
                            CategoryId = "main",
                            Description = "Exquisite blend of 15 spices to create the seasoning that goes into Chana.",
                            ImageUrl = "/Assets/Product/Chana Masala.jpg",
                            Name = "Chana Masala(chickpea curry)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 17,
                            CategoryId = "main",
                            Description = "Authentic Indian dish made with black lentils and kidney beans, cooked in a rich, creamy tomato sauce.",
                            ImageUrl = "/Assets/Product/Dal Makhani.jpg",
                            Name = "Dal Makhani",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 18,
                            CategoryId = "main",
                            Description = "Curry made from chicken with a spiced tomato and butter (makhan) sauce.",
                            ImageUrl = "/Assets/Product/Butter Chicken.jpg",
                            Name = "Butter Chicken",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 19,
                            CategoryId = "main",
                            Description = "Hot, fiery and tangy dish made with meat, vegetables and plenty of spices.",
                            ImageUrl = "/Assets/Product/Vindaloo.jpg",
                            Name = "Vindaloo(chicken, pork)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 20,
                            CategoryId = "main",
                            Description = "Indian dish with braised meat or vegetables cooked with spices and cream.",
                            ImageUrl = "/Assets/Product/Korma.jpg",
                            Name = "Korma(chicken, vegetable)",
                            Price = 20.0
                        },
                        new
                        {
                            FoodId = 21,
                            CategoryId = "breads",
                            Description = "Leavened flatbread made from white flour.",
                            ImageUrl = "/Assets/Product/Naan.jpg",
                            Name = "Naan",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 22,
                            CategoryId = "breads",
                            Description = "Thin flatbread made from whole wheat flour and perfect carrier for curries or cooked vegetables.",
                            ImageUrl = "/Assets/Product/Roti.jpg",
                            Name = "Roti",
                            Price = 10.0
                        },
                        new
                        {
                            FoodId = 23,
                            CategoryId = "breads",
                            Description = "Unleavened Indian wheat bread that is usually fried on a griddle.",
                            ImageUrl = "/Assets/Product/Paratha.jpg",
                            Name = "Paratha(plain, stuffed)",
                            Price = 18.0
                        },
                        new
                        {
                            FoodId = 24,
                            CategoryId = "breads",
                            Description = "Round pieces of thin dough made from whole wheat flour.",
                            ImageUrl = "/Assets/Product/Chapati.jpeg",
                            Name = "Chapati",
                            Price = 24.0
                        },
                        new
                        {
                            FoodId = 25,
                            CategoryId = "breads",
                            Description = "Deep-fried dough made from unleavened whole-wheat flour.",
                            ImageUrl = "/Assets/Product/Puri.jpg",
                            Name = "Puri",
                            Price = 5.0
                        },
                        new
                        {
                            FoodId = 26,
                            CategoryId = "breads",
                            Description = "Puffy, leavened, deep-fried Indian bread.",
                            ImageUrl = "/Assets/Product/Bhatura.jpg",
                            Name = "Bhatura",
                            Price = 6.0
                        },
                        new
                        {
                            FoodId = 27,
                            CategoryId = "rice",
                            Description = "Steamed basmati rice.",
                            ImageUrl = "/Assets/Product/Plain Rice.jpg",
                            Name = "Plain Rice",
                            Price = 16.0
                        },
                        new
                        {
                            FoodId = 28,
                            CategoryId = "rice",
                            Description = "Indian dish consisting of rice and cumin seeds.",
                            ImageUrl = "/Assets/Product/Jeera Rice.jpg",
                            Name = "Jeera Rice",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 29,
                            CategoryId = "rice",
                            Description = "Rice cooked with Indian spices, green peas and onions.",
                            ImageUrl = "/Assets/Product/Pulao.jpg",
                            Name = "Pulao(vegetable, biryani)",
                            Price = 4.0
                        },
                        new
                        {
                            FoodId = 30,
                            CategoryId = "rice",
                            Description = "Cooked rice mixed with turmeric and lemon.",
                            ImageUrl = "/Assets/Product/Lemon Rice.jpg",
                            Name = "Lemon Rice",
                            Price = 7.0
                        },
                        new
                        {
                            FoodId = 31,
                            CategoryId = "rice",
                            Description = "White rice cooked in a base of coconut milk and combined with shredded coconut.",
                            ImageUrl = "/Assets/Product/Coconut Rice.jpg",
                            Name = "Coconut Rice",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 32,
                            CategoryId = "sidedishes",
                            Description = "Condiment dip made up of onions and cucumbers that is served as a side.",
                            ImageUrl = "/Assets/Product/Raita.jpg",
                            Name = "Raita",
                            Price = 10.0
                        },
                        new
                        {
                            FoodId = 33,
                            CategoryId = "sidedishes",
                            Description = "Flavorful condiment made from fresh green mangoes/lemons.",
                            ImageUrl = "/Assets/Product/Pickles.jpg",
                            Name = "Pickles(mango, lime, mixed)",
                            Price = 18.0
                        },
                        new
                        {
                            FoodId = 34,
                            CategoryId = "sidedishes",
                            Description = "Indian crisps made from lentil flour",
                            ImageUrl = "/Assets/Product/Papadum.jpg",
                            Name = "Papadum",
                            Price = 24.0
                        },
                        new
                        {
                            FoodId = 35,
                            CategoryId = "sidedishes",
                            Description = "Savory condiment made from slow-cooked fruits or vegetables, vinegar, and spices.",
                            ImageUrl = "/Assets/Product/Chutney.jpg",
                            Name = "Chutney(mint, tamarind, coconut)",
                            Price = 5.0
                        },
                        new
                        {
                            FoodId = 36,
                            CategoryId = "desserts",
                            Description = "Spongy milk balls soaked in a light sugar syrup.",
                            ImageUrl = "/Assets/Product/Gulab Jamun.jpg",
                            Name = "Gulab Jamun",
                            Price = 6.0
                        },
                        new
                        {
                            FoodId = 37,
                            CategoryId = "desserts",
                            Description = "Deep-fried wheat/maida flour batter in pretzel or circular shapes, which are then soaked in sugar syrup.",
                            ImageUrl = "/Assets/Product/Jalebi.jpg",
                            Name = "Jalebi",
                            Price = 16.0
                        },
                        new
                        {
                            FoodId = 38,
                            CategoryId = "desserts",
                            Description = "Syrupy dessert made from ball-shaped dumplings of chhena dough, cooked in light sugar syrup.",
                            ImageUrl = "/Assets/Product/Rasgulla.jpg",
                            Name = "Rasgulla",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 39,
                            CategoryId = "desserts",
                            Description = "Sweet pudding made by boiling milk, sugar or jaggery, and rice.",
                            ImageUrl = "/Assets/Product/Kheer.jpg",
                            Name = "Kheer(rice pudding)",
                            Price = 4.0
                        },
                        new
                        {
                            FoodId = 40,
                            CategoryId = "desserts",
                            Description = "Combination of nuts, milk, sugar, khoya and ghee with grated carrots.",
                            ImageUrl = "/Assets/Product/Gajar Halwa.jpg",
                            Name = "Gajar Halwa(carrot halwa)",
                            Price = 7.0
                        },
                        new
                        {
                            FoodId = 41,
                            CategoryId = "desserts",
                            Description = "Frozen dairy dessert made as ice-cream.",
                            ImageUrl = "/Assets/Product/Malai Kulfi.jpg",
                            Name = "Malai Kulfi",
                            Price = 8.0
                        },
                        new
                        {
                            FoodId = 42,
                            CategoryId = "desserts",
                            Description = "Made of white cream, sugar, milk, and cardamom-flavored paneer cheese.",
                            ImageUrl = "/Assets/Product/Rasmalai.jpg",
                            Name = "Rasmalai",
                            Price = 10.0
                        },
                        new
                        {
                            FoodId = 43,
                            CategoryId = "desserts",
                            Description = "Sweet confectionery made from condensed milk and sugar, flavored with nuts and spices.",
                            ImageUrl = "/Assets/Product/Barfi.jpg",
                            Name = "Barfi(various flavors)",
                            Price = 18.0
                        },
                        new
                        {
                            FoodId = 44,
                            CategoryId = "beverages",
                            Description = "Aromatic beverage that blends black tea with various herbs and spices.",
                            ImageUrl = "/Assets/Product/Chai.jpg",
                            Name = "Chai(Indian tea)",
                            Price = 24.0
                        },
                        new
                        {
                            FoodId = 45,
                            CategoryId = "beverages",
                            Description = "Creamy, frothy yogurt-based drink, blended with water and various fruits or seasonings.",
                            ImageUrl = "/Assets/Product/Lassi.jpg",
                            Name = "Lassi(sweet, salted, mango)",
                            Price = 5.0
                        },
                        new
                        {
                            FoodId = 46,
                            CategoryId = "beverages",
                            Description = "Milky, sweet, spiced-filled black tea.",
                            ImageUrl = "/Assets/Product/Masala Chai.jpg",
                            Name = "Masala Chai",
                            Price = 6.0
                        },
                        new
                        {
                            FoodId = 47,
                            CategoryId = "beverages",
                            Description = "Spiced lemonade.",
                            ImageUrl = "/Assets/Product/Nimbu Pani.jpg",
                            Name = "Nimbu Pani(lemonade)",
                            Price = 16.0
                        },
                        new
                        {
                            FoodId = 48,
                            CategoryId = "beverages",
                            Description = "Drink made with fennel seeds, melon seeds and almonds.",
                            ImageUrl = "/Assets/Product/Thandai.jpg",
                            Name = "Thandai",
                            Price = 8.0
                        });
                });

            modelBuilder.Entity("IndainCuisine.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IndainCuisine.Models.Food", b =>
                {
                    b.HasOne("IndainCuisine.Models.Category", "Category")
                        .WithMany("Foods")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IndainCuisine.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IndainCuisine.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndainCuisine.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IndainCuisine.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndainCuisine.Models.Category", b =>
                {
                    b.Navigation("Foods");
                });
#pragma warning restore 612, 618
        }
    }
}
